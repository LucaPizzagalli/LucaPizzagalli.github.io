{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js"],"names":["AboutPage","render","level","this","props","active","title","variant","color","React","Component","Button","forwardRef","ref","children","classes","classNameProp","className","_props$color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","other","text","outlined","contained","primary","secondary","root","textPrimary","textSecondary","outlinedPrimary","outlinedSecondary","containedPrimary","containedSecondary","concat","inherit","colorInherit","createElement","focusRipple","focusVisible","label","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","transition","transitions","create","duration","textDecoration","backgroundColor","action","hoverOpacity","width","display","alignItems","justifyContent","main","border","getContrastText","grey","boxShadow","shadows","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge","name"],"mappings":"oJAMMA,E,gLACJC,OAAA,WACE,IAAIC,EAAQ,EAGZ,OAFIC,KAAKC,MAAMF,QACbA,EAAQC,KAAKC,MAAMF,OAEvB,kBAAC,IAAD,CAAQA,MAAOA,EAAOG,OAAQF,KAAKC,MAAMC,QACvC,kBAAC,IAAD,CAAKC,MAAM,aACX,wCACA,kBAAC,IAAD,CAAQC,QAAQ,YAAYC,MAAM,WAAlC,eACA,+DACA,8D,GAXoBC,IAAMC,WAiBfV,a,iCCvBf,mFAuMIW,EAAS,IAAMC,YAAW,SAAgBR,EAAOS,GACnD,IAAIC,EAAWV,EAAMU,SACjBC,EAAUX,EAAMW,QAChBC,EAAgBZ,EAAMa,UACtBC,EAAed,EAAMI,MACrBA,OAAyB,IAAjBU,EAA0B,UAAYA,EAC9CC,EAAmBf,EAAMgB,UACzBA,OAAiC,IAArBD,EAA8B,SAAWA,EACrDE,EAAkBjB,EAAMkB,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwBnB,EAAMoB,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAwBrB,EAAMqB,sBAC9BC,EAAmBtB,EAAMuB,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAcxB,EAAMyB,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAc1B,EAAM2B,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAiB5B,EAAMG,QACvBA,OAA6B,IAAnByB,EAA4B,OAASA,EAC/CC,EAAQ,YAAyB7B,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,qBAAsB,wBAAyB,YAAa,OAAQ,OAAQ,YAE3L8B,EAAmB,SAAZ3B,EACP4B,EAAuB,aAAZ5B,EACX6B,EAAwB,cAAZ7B,EACZ8B,EAAoB,YAAV7B,EACV8B,EAAsB,cAAV9B,EACZS,EAAY,YAAKF,EAAQwB,KAAMvB,EAAekB,GAAQ,CAACnB,EAAQmB,KAAMG,GAAWtB,EAAQyB,YAAaF,GAAavB,EAAQ0B,eAAgBN,GAAY,CAACpB,EAAQoB,SAAUE,GAAWtB,EAAQ2B,gBAAiBJ,GAAavB,EAAQ4B,mBAAoBP,GAAa,CAACrB,EAAQqB,UAAWC,GAAWtB,EAAQ6B,iBAAkBN,GAAavB,EAAQ8B,oBAA8B,WAAThB,GAAqBd,EAAQ,OAAO+B,OAAO,YAAWjB,KAASP,GAAYP,EAAQO,SAAUK,GAAaZ,EAAQY,UAAW,CACreoB,QAAShC,EAAQiC,cACjBxC,IACF,OAAO,IAAMyC,cAAc,IAAY,YAAS,CAC9ChC,UAAWA,EACXG,UAAWA,EACXE,SAAUA,EACV4B,aAAc1B,EACdC,sBAAuB,YAAKV,EAAQoC,aAAc1B,GAClDZ,IAAKA,EACLkB,KAAMA,GACLE,GAAQ,IAAMgB,cAAc,OAAQ,CACrChC,UAAWF,EAAQqC,OAClBtC,OAiFU,iBAxTK,SAAgBuC,GAClC,MAAO,CAELd,KAAM,YAAS,GAAIc,EAAMC,WAAWC,OAAQ,CAC1CC,UAAW,aACXC,SAAU,GACVC,QAAS,WACTC,aAAcN,EAAMO,MAAMD,aAC1BnD,MAAO6C,EAAMQ,QAAQ3B,KAAKG,QAC1ByB,WAAYT,EAAMU,YAAYC,OAAO,CAAC,mBAAoB,aAAc,UAAW,CACjFC,SAAUZ,EAAMU,YAAYE,SAAgB,QAE9C,UAAW,CACTC,eAAgB,OAChBC,gBAAiB,YAAKd,EAAMQ,QAAQ3B,KAAKG,QAASgB,EAAMQ,QAAQO,OAAOC,cAEvE,uBAAwB,CACtBF,gBAAiB,eAEnB,aAAc,CACZA,gBAAiB,gBAGrB,aAAc,CACZ3D,MAAO6C,EAAMQ,QAAQO,OAAO9C,YAKhC8B,MAAO,CACLkB,MAAO,OAEPC,QAAS,UACTC,WAAY,UACZC,eAAgB,WAIlBvC,KAAM,CACJwB,QAAS,WAIXlB,YAAa,CACXhC,MAAO6C,EAAMQ,QAAQxB,QAAQqC,KAC7B,UAAW,CACTP,gBAAiB,YAAKd,EAAMQ,QAAQxB,QAAQqC,KAAMrB,EAAMQ,QAAQO,OAAOC,cAEvE,uBAAwB,CACtBF,gBAAiB,iBAMvB1B,cAAe,CACbjC,MAAO6C,EAAMQ,QAAQvB,UAAUoC,KAC/B,UAAW,CACTP,gBAAiB,YAAKd,EAAMQ,QAAQvB,UAAUoC,KAAMrB,EAAMQ,QAAQO,OAAOC,cAEzE,uBAAwB,CACtBF,gBAAiB,iBAMvBhC,SAAU,CACRuB,QAAS,WACTiB,OAAQ,aAAa7B,OAA8B,UAAvBO,EAAMQ,QAAQ9B,KAAmB,sBAAwB,6BACrF,aAAc,CACZ4C,OAAQ,aAAa7B,OAAOO,EAAMQ,QAAQO,OAAO9C,YAKrDoB,gBAAiB,CACflC,MAAO6C,EAAMQ,QAAQxB,QAAQqC,KAC7BC,OAAQ,aAAa7B,OAAO,YAAKO,EAAMQ,QAAQxB,QAAQqC,KAAM,KAC7D,UAAW,CACTC,OAAQ,aAAa7B,OAAOO,EAAMQ,QAAQxB,QAAQqC,MAClDP,gBAAiB,YAAKd,EAAMQ,QAAQxB,QAAQqC,KAAMrB,EAAMQ,QAAQO,OAAOC,cAEvE,uBAAwB,CACtBF,gBAAiB,iBAMvBxB,kBAAmB,CACjBnC,MAAO6C,EAAMQ,QAAQvB,UAAUoC,KAC/BC,OAAQ,aAAa7B,OAAO,YAAKO,EAAMQ,QAAQvB,UAAUoC,KAAM,KAC/D,UAAW,CACTC,OAAQ,aAAa7B,OAAOO,EAAMQ,QAAQvB,UAAUoC,MACpDP,gBAAiB,YAAKd,EAAMQ,QAAQvB,UAAUoC,KAAMrB,EAAMQ,QAAQO,OAAOC,cAEzE,uBAAwB,CACtBF,gBAAiB,gBAGrB,aAAc,CACZQ,OAAQ,aAAa7B,OAAOO,EAAMQ,QAAQO,OAAO9C,YAKrDc,UAAW,CACT5B,MAAO6C,EAAMQ,QAAQe,gBAAgBvB,EAAMQ,QAAQgB,KAAK,MACxDV,gBAAiBd,EAAMQ,QAAQgB,KAAK,KACpCC,UAAWzB,EAAM0B,QAAQ,GACzB,iBAAkB,CAChBD,UAAWzB,EAAM0B,QAAQ,IAE3B,WAAY,CACVD,UAAWzB,EAAM0B,QAAQ,IAE3B,aAAc,CACZvE,MAAO6C,EAAMQ,QAAQO,OAAO9C,SAC5BwD,UAAWzB,EAAM0B,QAAQ,GACzBZ,gBAAiBd,EAAMQ,QAAQO,OAAOY,oBAExC,UAAW,CACTb,gBAAiBd,EAAMQ,QAAQgB,KAAKI,KAEpC,uBAAwB,CACtBd,gBAAiBd,EAAMQ,QAAQgB,KAAK,MAEtC,aAAc,CACZV,gBAAiBd,EAAMQ,QAAQO,OAAOY,sBAM5CpC,iBAAkB,CAChBpC,MAAO6C,EAAMQ,QAAQxB,QAAQ6C,aAC7Bf,gBAAiBd,EAAMQ,QAAQxB,QAAQqC,KACvC,UAAW,CACTP,gBAAiBd,EAAMQ,QAAQxB,QAAQ8C,KAEvC,uBAAwB,CACtBhB,gBAAiBd,EAAMQ,QAAQxB,QAAQqC,QAM7C7B,mBAAoB,CAClBrC,MAAO6C,EAAMQ,QAAQvB,UAAU4C,aAC/Bf,gBAAiBd,EAAMQ,QAAQvB,UAAUoC,KACzC,UAAW,CACTP,gBAAiBd,EAAMQ,QAAQvB,UAAU6C,KAEzC,uBAAwB,CACtBhB,gBAAiBd,EAAMQ,QAAQvB,UAAUoC,QAM/CvB,aAAc,GAGd7B,SAAU,GAGV0B,aAAc,CACZxC,MAAO,UACP4E,YAAa,gBAIfC,UAAW,CACT3B,QAAS,UACT4B,SAAUjC,EAAMC,WAAWiC,QAAQ,KAIrCC,UAAW,CACT9B,QAAS,WACT4B,SAAUjC,EAAMC,WAAWiC,QAAQ,KAIrC5D,UAAW,CACT2C,MAAO,WA8HqB,CAChCmB,KAAM,aADO,CAEZ9E","file":"component---src-pages-about-js-c8a0b954d2f8f92b5af4.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass AboutPage extends React.Component {\r\n  render() {\r\n    let level = 0;\r\n    if (this.props.level)\r\n      level = this.props.level;\r\n    return (\r\n  <Layout level={level} active={this.props.active}>\r\n    <SEO title=\"Contacts\" />\r\n    <h1>About me</h1>\r\n    <Button variant=\"contained\" color=\"primary\">Download CV</Button>\r\n    <p>Welcome to your new Gatsby site.</p>\r\n    <p>Now go build something great.</p>\r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var text = variant === 'text';\n  var outlined = variant === 'outlined';\n  var contained = variant === 'contained';\n  var primary = color === 'primary';\n  var secondary = color === 'secondary';\n  var className = clsx(classes.root, classNameProp, text && [classes.text, primary && classes.textPrimary, secondary && classes.textSecondary], outlined && [classes.outlined, primary && classes.outlinedPrimary, secondary && classes.outlinedSecondary], contained && [classes.contained, primary && classes.containedPrimary, secondary && classes.containedSecondary], size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, {\n    inherit: classes.colorInherit\n  }[color]);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"sourceRoot":""}